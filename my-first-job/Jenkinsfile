pipeline {
  agent {
    docker { image 'python:3.10-alpine' 
    args '--user root'
           }
  }
  environment {
    CI = 'true'  // Enable CI mode
    PYTEST_ARGS = "tests/ --junitxml=reports/test-results.xml -v -s"
  }
  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/sdutta24/devops-pipeline-test', branch: 'main'
      }
    }
    stage('Install rsync') {
            steps {
                sh 'apk add --no-cache rsync'
            }
        }
    stage('Install SCP') {
    steps {
        sh '''
        apk add --no-cache openssh-client
        '''
    }
   }
   stage('Setup Python Environment'){
      steps{
        sh '''
        python -m venv venv
        source venv/bin/activate
        python --version
        '''
      }
    }
    stage('Install Dependencies'){
      steps{
        sh '''
        source venv/bin/activate
        pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        '''
      }
    }
    stage('Run Calculator Script') {
      steps {
        sh '''
        source venv/bin/activate
        cd $WORKSPACE/my-first-job
        python calculator1.py
        '''
      }
    }
    stage('Run Tests') {
    steps {
        sh '''
        source venv/bin/activate
        export PYTHONPATH=$WORKSPACE/my-first-job
        cd $WORKSPACE/my-first-job
        pytest $PYTEST_ARGS
        '''
    }
   }
    stage('Package Application') {
      steps {
        sh '''
        mkdir -p dist
        cp $WORKSPACE/my-first-job/calculator1.py dist/
        '''
      }
    }
    stage('Deploy') {
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'server-ssh-key', keyFileVariable: 'SSH_KEY')]) {
          sh '''
            echo "Deploying calculator script using rsync..."
            rsync -avz -e "ssh -o StrictHostKeyChecking=no -i $SSH_KEY" dist/ ubuntu@ip-172-31-20-89.us-west-2.compute.internal:/var/local/
            echo "Deployment completed!"
            '''
       }
     }
   }
 }
}
